{"version":3,"file":"Main.controller.js","names":["Main","Controller","extend"],"sources":["Main.controller.ts"],"sourcesContent":["import Controller from \"sap/fe/core/PageController\";\nimport ODataModel from \"sap/ui/model/odata/v4/ODataModel\";\nimport View from \"sap/ui/core/mvc/View\";\n/**\n * @namespace eagleburgmann.training.orders.ext.main\n */\nexport default class Main extends Controller {\n  // public onInit(): void {\n  //   const view = this.getView() as View;\n  //   const oDataModel = new ODataModel({\n  //     serviceUrl: \"/odata/v4/catalog/\",\n  //   });\n  //   view.setModel(oDataModel);\n  // }\n  /**\n   * Called when a controller is instantiated and its View controls (if available) are already created.\n   * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\n   * @memberOf eagleburgmann.training.orders.ext.main.Main\n   */\n  // public onInit(): void {\n  //     super.onInit(); // needs to be called to properly initialize the page controller\n  //}\n  /**\n   * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered\n   * (NOT before the first rendering! onInit() is used for that one!).\n   * @memberOf eagleburgmann.training.orders.ext.main.Main\n   */\n  // public  onBeforeRendering(): void {\n  //\n  //  }\n  /**\n   * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\n   * This hook is the same one that SAPUI5 controls get after being rendered.\n   * @memberOf eagleburgmann.training.orders.ext.main.Main\n   */\n  // public  onAfterRendering(): void {\n  //\n  //  }\n  /**\n   * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\n   * @memberOf eagleburgmann.training.orders.ext.main.Main\n   */\n  // public onExit(): void {\n  //\n  //  }\n}\n"],"mappings":"sEAGA,MAGqBA,EAAaC,EAAUC,OAAA,yDAAvBF,CAAI","ignoreList":[]}